{
  "uid" : "fed85c3fc442d760",
  "name" : "TestApi.test_delete_department",
  "fullName" : "test_request.TestApi.test_delete_department",
  "historyId" : "47586982c808ba8478c64ac9b6e59f7c",
  "time" : {
    "start" : 1534752823753,
    "stop" : 1534752823882,
    "duration" : 129
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "failed",
  "statusMessage" : "AssertionError: ",
  "statusTrace" : "self = <test_request.TestApi object at 0x04655B90>\n\n    @pytest.mark.run(order=-1)\n    @allure.step(title=\"删除数据\")\n    def test_delete_department(self):\n        res = self.deparment_api.delete_department()\n        print(res.text, \"status_code:\", res.status_code, '\\n')\n>       self.deparment_api.assert_status_code(res.status_code, 204)\n\nscript\\test_request.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nstatus_code = 200, code = 204\n\n    @staticmethod\n    def assert_status_code(status_code, code):\n        try:\n>           assert status_code == code\nE           AssertionError\n\nApi\\deparments_api.py:20: AssertionError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: ",
    "statusTrace" : "self = <test_request.TestApi object at 0x04655B90>\n\n    @pytest.mark.run(order=-1)\n    @allure.step(title=\"删除数据\")\n    def test_delete_department(self):\n        res = self.deparment_api.delete_department()\n        print(res.text, \"status_code:\", res.status_code, '\\n')\n>       self.deparment_api.assert_status_code(res.status_code, 204)\n\nscript\\test_request.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nstatus_code = 200, code = 204\n\n    @staticmethod\n    def assert_status_code(status_code, code):\n        try:\n>           assert status_code == code\nE           AssertionError\n\nApi\\deparments_api.py:20: AssertionError",
    "steps" : [ {
      "name" : "删除数据",
      "time" : {
        "start" : 1534752823754,
        "stop" : 1534752823771,
        "duration" : 17
      },
      "status" : "failed",
      "statusMessage" : "self = <test_request.TestApi object at 0x04655B90>\n\n    @pytest.mark.run(order=-1)\n    @allure.step(title=\"删除数据\")\n    def test_delete_department(self):\n        res = self.deparment_api.delete_department()\n        print(res.text, \"status_code:\", res.status_code, '\\n')\n>       self.deparment_api.assert_status_code(res.status_code, 204)\n\nscript\\test_request.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nstatus_code = 200, code = 204\n\n    @staticmethod\n    def assert_status_code(status_code, code):\n        try:\n>           assert status_code == code\nE           AssertionError\n\nApi\\deparments_api.py:20: AssertionError",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "4eb06335310b94ca",
      "name" : "Captured log call",
      "source" : "4eb06335310b94ca.txt",
      "type" : "text/plain",
      "size" : 78
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 1,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "host",
    "value" : "heli-pc"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "thread",
    "value" : "7740-MainThread"
  }, {
    "name" : "suite",
    "value" : "test_request"
  }, {
    "name" : "testClass",
    "value" : "test_request"
  }, {
    "name" : "testMethod",
    "value" : "TestApi.test_delete_department"
  }, {
    "name" : "package",
    "value" : "test_request"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "fed85c3fc442d760.json",
  "parameterValues" : [ ]
}